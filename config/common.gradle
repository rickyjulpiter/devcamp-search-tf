apply from: "$rootDir/config/libraries.gradle"
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

allOpen {
    def abstraction = "com.tokopedia.abstraction"
    def openClass = ".annotation.OpenClass"
    annotation abstraction + openClass
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner rootProject.ext.testLib.instrumentationRunner

        buildConfigField("String", "MAIN_URL", api_tokopedia)
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.lib.kotlin
    implementation rootProject.ext.lib.appcompat
    implementation rootProject.ext.lib.tensorflow
    implementation rootProject.ext.lib.coreKtx

    //reactive framework
    implementation rootProject.ext.lib.rxjava
    implementation rootProject.ext.lib.rxkotlin
    implementation rootProject.ext.lib.rxandroid

    //dependencies injection
    implementation rootProject.ext.lib.dagger
    implementation rootProject.ext.lib.daggerAndroid
    kapt rootProject.ext.lib.daggerCompiler
    kapt rootProject.ext.lib.daggerProcessor

    //utilities
    implementation rootProject.ext.lib.gson

    testImplementation rootProject.ext.testLib.junit
    testImplementation rootProject.ext.testLib.mockito
    androidTestImplementation rootProject.ext.testLib.testRunner
    androidTestImplementation rootProject.ext.testLib.espresso
}
